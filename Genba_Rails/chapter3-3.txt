アクション: リクエストに対しての処理を実行するメソッド

リクエストを処理するコントローラーとアクションは、ブラウザからリクエストに含まれるURLとHTTPメソッドによって決定される
コントローラーのアクションを設計する際には、入り口となるURLとHTTPメソッドを合わせて考える必要がある

アクションの基本的な役割: 
アクションからビューに受け渡しをしたいデータをインスタンス変数に入れる
ブラウザに返す画面をどうするのかを記述する

リクエスパラメータ:
リクエストに添えたデータ

送り方:
1 POSTで送る (例: form要素をsubmitする)
2 GETで送る (例: URLの?以降に情報を含めることで送る)
両者はparamsというメソッドでHashのような感覚で受け取れる

f.label :name 
タスクの名称の入力欄に対応するlabel要素を出力

f.text_field :name 
タスクの名称の入力欄を出力

f.label :description
タスクの詳しい説明の入力欄に対応するlabel要素を出力

f.text_area :description
タスクの詳しい説明の入力欄を出力

config/locales/ja.yml

helpers
  select:
    prompt: 選択してください
  submit:
    create: 登録する
    submit: 保存する
    update: 更新する

これらの記述より、@taskの状態を見てcreateがしたいとRailsが自動的に判断する
=> new.html.slimのf.submit が 登録する　と表示される

newアクションで新しいタスクオブジェクトを作成したのに、どうしてcreateアクションでまた作成する必要があるのか?
ブラウザからのリクエストに新しくプログラムを実行される
前のリクエストで作成した変数などは次のリクエストでそのまま利用できない
=>パラメータを渡したり,セッションやデータベースに保存して呼び出す

Flashメッセージ
Flashには、ハッシュの形でデータを格納できる
flash[:notice] = "~"
noticeというキーに値を入れる
